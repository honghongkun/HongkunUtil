<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Hong.ssm.dao.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.Hong.ssm.bean.SysRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_status" property="roleStatus" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.Hong.ssm.bean.SysMenuExt" id="SysMenuExtResultMap" extends="com.Hong.ssm.dao.SysMenuMapper.BaseResultMap">
  	<result  column="check_flg" property="checkedFlg" />
  
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_status
  </sql>
   <sql id="menu_Base_Column_List">
    menu_id, menu_pid, menu_name, menu_order, menu_url, menu_show,check_flg
  </sql>
  
  <!-- 获取角色列表 -->
  <select id="selRoleList" parameterType="sysRole" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role 
    <where>
		 <if test="roleName!=null">
			role_name like concat('%',#{roleName},'%')
		</if>
		<if test="roleStatus!=null">
			role_status  = #{roleStatus}
		</if>
	</where>
  </select>
  
  <!--  获取ID -->
    <select  id="selMenuIdsByRoleID" parameterType="integer" resultType="integer" > 
  	
  	select menu_pid from sys_role_menu where role_pid=#{roleId}
  
  </select>
  
     <!--  获取角色相关的 权限列表  用于设置角色权限 selMenuForSetRole -->
   <select id="selMenuForSetRole" parameterType="integer" resultMap="SysMenuExtResultMap">
   	select  
	 <include refid="menu_Base_Column_List" />
	 from sys_menu   t1  left  join (select   menu_pid as check_flg   from sys_role_menu  where role_pid=#{roleId})  t2  on  t1.menu_id = t2.check_flg
   </select>
   
   <delete id="delRoleMenuByRoleId" parameterType="integer">
   		delete from sys_role_menu where role_pid = #{roleId}
   </delete>
   
   <insert id="addRoleMenuByRoleId" >
   	  insert into sys_role_menu (role_pid,menu_pid) values 
   	 <foreach collection="menuIds" item="string"  separator="," >
			(#{roleId},#{string})
		</foreach>
   
   </insert>
  
  
  
   <!-- 添加角色 -->
    <insert id="addRole" parameterType="com.Hong.ssm.bean.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      
      <if test="roleName != null">
        role_name,
      </if>
       <if test="roleStatus != null">
        role_status,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
     
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <!--  查询ID -->
   <select id="selRoleByID" parameterType="sysRole" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role where role_id = #{roleId}
  </select>
  
  <delete id="delRole" parameterType="java.lang.Integer" >
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  
 <!--  修改 -->
  <update id="editRole" parameterType="com.Hong.ssm.bean.SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null" >
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <!-- 修改状态 -->
   <update id="editroleStatus" parameterType="com.Hong.ssm.bean.SysRole" >
    update sys_role set role_status = #{roleStatus,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.Hong.ssm.bean.SysRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Hong.ssm.bean.SysRoleExample" >
    delete from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Hong.ssm.bean.SysRole" >
    insert into sys_role (role_id, role_name, role_status
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Hong.ssm.bean.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleStatus != null" >
        role_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null" >
        #{roleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Hong.ssm.bean.SysRoleExample" resultType="java.lang.Integer" >
    select count(*) from sys_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_role
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleStatus != null" >
        role_status = #{record.roleStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_role
    set role_id = #{record.roleId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_status = #{record.roleStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Hong.ssm.bean.SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null" >
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Hong.ssm.bean.SysRole" >
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_status = #{roleStatus,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>